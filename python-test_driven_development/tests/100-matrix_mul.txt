The ''100-matrix_mul'' module
============================

Using ''matrix_mul''
--------------------

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Functional Cases:
----------------
1. Basic Multipication:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    [[7, 10], [15, 22]]

2. TypeError - m_a not a rectangle:
    >>> matrix_a = [
    ...	[1, 2, 3],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

3. TypeError - m_b not a rectangle:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2, 3],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

4. ValueError - m_a empty:
    >>> matrix_a = []
    >>> matrix_b = [
    ...	[1, 2, 3],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

5. ValueError - m_b empty:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = []
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    ValueError: m_b can't be empty

6. TypeError - m_a not a list of lists:
    >>> matrix_a = [{}]
    >>> matrix_b = [
    ...	[1, 2, 3],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

7. TypeError - m_b not a list of lists:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [{}]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

8. TypeError - m_a contains a char:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 'x']
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

9. TypeError - m_b contains a char:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 'x']
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

10. TypeError - m_a must be a list:
    >>> matrix_a = {}
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: m_a must be a list

11. TypeError - m_b must be a list:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = {}
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    TypeError: m_b must be a list

12. Multipication by Infinity:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, float('inf')]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    [[7, 10], [inf, inf]]

13. Multiply different sizes:
    >>> matrix_a = [
    ...	[1, 2]
    ... ]
    >>> matrix_b = [
    ...	[3, 4],
    ...	[5, 6]
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    [[13, 16]]

Edge Cases:
----------

14. NameError - 'hello' is not defined:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul([[1, 2], [3, 4]], hello))
    Traceback (most recent call last):
    NameError: name 'hello' is not defined

15. TypeError - No arguments:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul())
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

16. TypeError - more than 2 arguments:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    TypeError: matrix_mul() takes 2 positional arguments but 3 were given

17. ValueError - m_a and m_b can't be multiplied:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2, 3],
    ...	[4, 5, 6],
    ...	[7, 8, 9],
    ... ]
    >>> print(matrix_mul(matrix_a, matrix_b))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

18. TypeError - missing m_b argument:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(matrix_a,))
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

19. SyntaxError - missing m_a argument:
    >>> matrix_a = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> matrix_b = [
    ...	[1, 2],
    ...	[3, 4]
    ... ]
    >>> print(matrix_mul(, matrix_b))
    Traceback (most recent call last):
    SyntaxError: invalid syntax